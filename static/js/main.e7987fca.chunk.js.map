{"version":3,"sources":["components/LoginForm.jsx","jane.js","components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","john.js","img/john.jpg","img/jane.jpg","App.js","index.js"],"names":["LoginForm","useState","username","setUserName","password","setPassword","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","Jane","getItem","projectID","userName","userSecret","height","MessageForm","props","setValue","chatId","creds","event","text","trim","length","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessage","keys","Object","key","lastMessageKey","width","title","John","renderChatFeed","chatAppProps","Nav","john","to","jane","React","Component","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7987fca.chunk.js","sourcesContent":["import {useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        //authanticate all the specific data\r\n        const authObject = {\r\n            'Project-ID': \"c6868c85-147a-468c-9b22-bfe21187626b\", 'User-Name': username, 'User-Secret': password\r\n        }\r\n\r\n\r\n        //username / password >> chatengine >> give messages\r\n        try {\r\n            await axios.get('https://api.chatengine.io/chats', {headers: authObject});\r\n            // if works >> log in\r\n\r\n            localStorage.setItem('username', username);\r\n            localStorage.setItem('password', password);\r\n\r\n            window.location.reload();\r\n        } catch (error) {\r\n            // else error >> try again\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Room</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUserName(e.target.value)} className=\"input\" placeholder=\"Username\" required/>\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required/>\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\nimport { ChatEngine } from 'react-chat-engine';\r\nimport LoginForm from \"./components/LoginForm\";\r\n\r\n\r\nexport default function Jane() {\r\n\r\n    if(!localStorage.getItem('username')) return <LoginForm/>\r\n\r\n    return (\r\n        <ChatEngine\r\n            projectID='c6868c85-147a-468c-9b22-bfe21187626b'\r\n            userName='bot'\r\n            userSecret='P@ssw0rd'\r\n            height = '100vh'\r\n\r\n        />\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport { sendMessage, isTyping} from 'react-chat-engine'\r\nimport { SendOutlined, PictureOutlined} from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    const [value, setValue] = useState('')\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, { text });\r\n\r\n        setValue('');\r\n\r\n    }\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' })\r\n    }\r\n\r\n    return (\r\n\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input\r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n}\r\n\r\nexport default MessageForm;","const MyMessage = ({message}) => {\r\n    if (message?.attachments?.length > 0) {\r\n        return  (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right'}}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: '#3B2A50'}}>\r\n            {message.text}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({lastMessage, message}) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className=\"message-avatar\"\r\n                    style={{backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n\r\n            {message?.attachments?.length > 0\r\n                ?  (\r\n                <img\r\n                    src={message.attachments[0].file}\r\n                    alt=\"message-attachment\"\r\n                    className=\"message-image\"\r\n                    style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px'}}\r\n                />\r\n                ) : (\r\n                    <div className=\"message\" style={{ float: 'left',  backgroundColor: '#CABCDC', marginLeft: isFirstMessageByUser ? '4px' : '48px'}}>\r\n                        {message.text}\r\n                    </div>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TheirMessage;","import MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\n\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages} = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div\r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessage = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map( (key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index -1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} style={{width: '100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage\r\n                            ? <MyMessage message={message}/>\r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]}  />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{marginRight : isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px'}}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n\r\n        });\r\n    }\r\n\r\n    renderMessage()\r\n\r\n    if(!chat) return 'Loading...'\r\n\r\n    return (\r\n        <div className = \"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">{chat?.title}</div>\r\n                <div className=\"chat-subtitle\">\r\n\r\n\r\n                    {chat.people.map((person) => ` ${person.person.username}`)}\r\n\r\n\r\n                </div>\r\n            </div>\r\n            {renderMessage()}\r\n            <div style={{height: '100px'}} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ChatFeed;","import React from 'react'\r\nimport { ChatEngine } from 'react-chat-engine';\r\n\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from \"./components/LoginForm\";\r\n\r\nexport default function John() {\r\n\r\n    if(!localStorage.getItem('username')) return <LoginForm/>\r\n\r\n\r\n        return (\r\n        <ChatEngine\r\n            projectID='c6868c85-147a-468c-9b22-bfe21187626b'\r\n            userName='JohnDoe'\r\n            userSecret='P@ssw0rd'\r\n            height = '100vh'\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n\r\n        />\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/john.258d8dcb.jpg\";","export default __webpack_public_path__ + \"static/media/jane.8e88e51b.jpg\";","import React from 'react';\r\nimport './App.css';\r\nimport './Nav.css';\r\nimport Jane from './jane';\r\nimport John from './john';\r\nimport john from './img/john.jpg';\r\nimport jane from './img/jane.jpg';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\n\r\nclass Nav extends React.Component {\r\n  render(){\r\n    return(\r\n      <div className=\"navWindow\">\r\n        <div className=\"loginCard\">\r\n          <img className=\"profile-picture\" src={john} alt=\"John picture\"/>\r\n          <Link to=\"/John\">Login as John</Link>\r\n        </div>\r\n        <div className=\"loginCard\">\r\n          <img className=\"profile-picture\" src={jane} alt=\"Jane picture\"/>\r\n          <Link to=\"/Jane\">Login as Jane</Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/John\">\r\n          <John />\r\n        </Route>\r\n        <Route path=\"/Jane\">\r\n          <Jane />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Nav />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}